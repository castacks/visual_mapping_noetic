models_dir: /models #necessary to include this for non-ROS offline proc

do_proj_cleanup: true

images:
    image_left:
        image_topic: /crl_rzr/multisense_left/aux/image_rect_color
        camera_info_topic: /crl_rzr/multisense_left/aux/camera_info
        image_compressed: False
        folder: image_left
        mask: /catkin_ws/src/vfm_voxel_mapping/visual_mapping_noetic/data/masks/rzr/left.png

        #camera intrinsics
        intrinsics:
            K: [600., 0., 480., 0., 600., 300., 0., 0., 1.]
            P: [600., 0., 480., 0., 600., 300., 0., 0., 1.]

        #transform from the vehicle link to the camera link
        extrinsics:
            p: [-1.789, 1.966, -0.788]
            q: [0.805, -0.212, 0.150, 0.534] #xyzw
        
    image_front:
        image_topic: /crl_rzr/multisense_front/aux/image_rect_color
        camera_info_topic: /crl_rzr/multisense_front/aux/camera_info
        image_compressed: False
        folder: image_front
        mask: /catkin_ws/src/vfm_voxel_mapping/visual_mapping_noetic/data/masks/rzr/front.png

       #camera intrinsics
        intrinsics:
            K: [600., 0., 480., 0., 600., 300., 0., 0., 1.]
            P: [600., 0., 480., 0., 600., 300., 0., 0., 1.]

        #transform from the vehicle link to the camera link
        extrinsics:
            p: [0.057, 2.308, -1.681]
            q: [0.597, -0.593, 0.384, 0.380]  #xyzw

    image_right:
        image_topic: /crl_rzr/multisense_right/aux/image_rect_color
        camera_info_topic: /crl_rzr/multisense_right/aux/camera_info
        image_compressed: False
        folder: image_right
        mask: /catkin_ws/src/vfm_voxel_mapping/visual_mapping_noetic/data/masks/rzr/right.png

        #camera intrinsics
        intrinsics:
            K: [600., 0., 480., 0., 600., 300., 0., 0., 1.]
            P: [600., 0., 480., 0., 600., 300., 0., 0., 1.]

        #transform from the vehicle link to the camera link
        extrinsics:
            p: [1.933, 1.999, -0.735]
            q: [-0.217, 0.812, -0.523, -0.144] #xyzw

pointcloud:
   topic: /crl_rzr/velodyne_merged_points
   folder: pointcloud_in_vehicle

#gridmap pub is bad in python so reduce number of layers
gridmap_pub_keys:
    - terrain
    - cost
    # - obstacle_max_csim
    # - nonobstacle_max_csim

#the base link of the vehicle (e.g. base_link, vehicle, etc.)
vehicle_frame: crl_rzr/base_link

#the fixed frame to map in
mapping_frame: crl_rzr/map

image_processing:
    -
        type: dino
        args:
            # dino_type: dinov2_vitb14_reg
            # dino_layers: [10]
            # image_insize: [560, 448]

            dino_type: radio_v2.5-b
            dino_layers: [11]
            image_insize: [640, 512]

            # stride: 4
            desc_facet: value

    # - 
    #     type: pca
    #     args:
    #         # fp: physics_atv_visual_mapping/pca/vitb_reg_64_gascola_veg.pt
    #         fp: physics_atv_visual_mapping/pca/radio_64_trabuco_racer.pt

    -
        type: traversability_prototypes
        args:
            fp: physics_atv_visual_mapping/traversability_prototypes/trabuco_ptypes_test.pt

# voxel
localmapping:
    mapper_type: voxel
    layer_key: dino
    ema: 0.5 #higher->use recent more
    n_features: 8
    metadata:
        origin: [-50., -50., -10.]
        length: [100., 100., 20.]
        resolution: [0.2, 0.2, 0.1]

    raytracer:
        type: frustum
        sensor:
            type: VLP32C-front

terrain_estimation:
    -
        type: elevation_stats
        args: {}

    -
        type: porosity
        args: {}

    -
        type: elevation_filter
        args:
            input_layer: min_elevation
            cnt_layer: num_voxels

            height_low_thresh: -3.0 #cells this far below their neighbors are not terrain
            height_high_thresh: 0.5 #cells this far above their neighbors are not terrain

            kernel_params:
                kernel_type: gaussian #one of {gaussian/box} the kernel type to use for inflation

                kernel_radius: 2. #kernel radius in m
                kernel_sharpness: 5. #sharpness of (Gaussian) kernel

                # kernel_radius: 0.25 #kernel radius in m
                # kernel_sharpness: 0.5 #sharpness of (Gaussian) kernel

    -
        type: terrain_inflation
        args:
            input_layer: min_elevation_filtered
            mask_layer: min_elevation_filtered_mask

            thresh: 0.05 #at least this frac of neighboring cells in the kernel must be observed

            kernel_params:
                kernel_type: gaussian #one of {gaussian/box} the kernel type to use for inflation

                kernel_radius: 1. #kernel radius in m
                kernel_sharpness: 2. #sharpness of (Gaussian) kernel

                # kernel_radius: 0.5 #kernel radius in m
                # kernel_sharpness: 1.0 #sharpness of (Gaussian) kernel

    - 
        type: mrf_terrain_estimation
        args: 
            input_layer: min_elevation_filtered_inflated
            mask_layer: min_elevation_filtered_inflated_mask

            itrs: 5   #num updates
            alpha: 1. #weight on the measurement update
            beta: 1.  #weight on the neighbor update
            lr: 0.05   #learning rate

            kernel_params:
                kernel_type: gaussian #one of {gaussian/box} the kernel type to use for inflation

                kernel_radius: 1. #kernel radius in m
                kernel_sharpness: 2. #sharpness of (Gaussian) kernel

                # kernel_radius: 0.5
                # kernel_sharpness: 1.0

    - 
        type: slope
        args:
            input_layer: terrain
            mask_layer: min_elevation_filtered_inflated_mask
            radius: 1.0
            max_slope: 2.0

    -
        type: terrain_diff
        args:
            terrain_layer: terrain
            overhang: 2.0
            
    -
        type: terrain_aware_bev_feature_splat
        args:
            output_key: dino
            terrain_layer: terrain
            terrain_mask_layer: min_elevation_filtered_inflated_mask
            reduce: max
            overhang: 2.0

    -
        type: traversability_prototype_scores
        args:
            vfm_feature_key: dino #should match whatever's in the bev_feature_splat block
            mask_key: num_voxels
            prototype_fp: /models/physics_atv_visual_mapping/traversability_prototypes/trabuco_ptypes_test.pt

rate: 0.2
device: cuda
viz: True